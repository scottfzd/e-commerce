// Mocks generated by Mockito 5.4.4 from annotations
// in app/test/features/carts/domain/usecases/get_my_cart_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:app/core/error/failures.dart' as _i5;
import 'package:app/features/cart_products/domain/entities/cart_product_entity.dart'
    as _i7;
import 'package:app/features/carts/domain/entities/cart_entity.dart' as _i6;
import 'package:app/features/carts/domain/repositories/cart_repository.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CartRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCartRepository extends _i1.Mock implements _i3.CartRepository {
  MockCartRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>> getMyCart(int? shopId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMyCart,
          [shopId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.CartEntity>(
          this,
          Invocation.method(
            #getMyCart,
            [shopId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.CartEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.CartProductEntity>> addProductToCart(
    int? shopId,
    String? barcode,
    int? quantity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addProductToCart,
          [
            shopId,
            barcode,
            quantity,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.CartProductEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.CartProductEntity>(
          this,
          Invocation.method(
            #addProductToCart,
            [
              shopId,
              barcode,
              quantity,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.CartProductEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.CartProductEntity>> updateProduct(
    int? shopId,
    String? barcode,
    int? quantity,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProduct,
          [
            shopId,
            barcode,
            quantity,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.CartProductEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.CartProductEntity>(
          this,
          Invocation.method(
            #updateProduct,
            [
              shopId,
              barcode,
              quantity,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.CartProductEntity>>);

  @override
  _i4.Future<
      _i2.Either<_i5.Failure, _i7.CartProductEntity>> removeProductFromCart(
    int? shopId,
    String? barcode,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeProductFromCart,
          [
            shopId,
            barcode,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i7.CartProductEntity>>.value(
                _FakeEither_0<_i5.Failure, _i7.CartProductEntity>(
          this,
          Invocation.method(
            #removeProductFromCart,
            [
              shopId,
              barcode,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i7.CartProductEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, bool>> clearCart(int? shopId) =>
      (super.noSuchMethod(
        Invocation.method(
          #clearCart,
          [shopId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, bool>>.value(
            _FakeEither_0<_i5.Failure, bool>(
          this,
          Invocation.method(
            #clearCart,
            [shopId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, bool>>);
}
