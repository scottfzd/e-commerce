stages:
  - test
  - build
  - deploy

variables:
  GIT_STRATEGY: clone

test:
  stage: test
  image: ghcr.io/cirruslabs/flutter:3.24.5
  before_script:
    - cd app
    - echo "BASE_URL=$BASE_URL" > .env 
    - flutter pub get
  script:
    - flutter test --no-pub 

build:
  stage: build
  image: ghcr.io/cirruslabs/flutter:3.24.5
  before_script:
    # - flutter --version  # Verify Flutter version
    - cd app         # Change to the app directory
    - flutter pub get    # Fetch dependencies
    - echo "BASE_URL=$BASE_URL" > .env  # Set environment variable for the build

  script:
    - flutter build apk  # Build APK
    - cd ..              # Return to the root directory
    - cp ./app/build/app/outputs/flutter-apk/app-release.apk ./apk/app-release.apk  # Copy APK to a common location
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-release.apk  # Directly reference the output file
    expire_in: 1 week  # Keep for a week

deploy-apk:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest
  variables:
    GIT_DEPTH: 0  # Forces a full clone
  script:
    - ls -la
#    - cp ./build/app-release.apk ./apk/app-release.apk  # Copy APK to a common location
    - aws s3 cp ./apk s3://$S3_BUCKET/ --recursive
  only:
    - main  # Deploy only on main branch

